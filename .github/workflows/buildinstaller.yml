name: Build installer

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "*"
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21

      #   - name: Build
      #     id: build
      #     run: |
      #       mkdir bin
      #       go get -v
      #       ls -la
      #       cd ui && npm install && npm run build && cd ..
      #       ls
      #       rm -rf application/webserver/frontend/files/*
      #       mv ui/dist/* application/webserver/frontend/files
      #       mv application/webserver/frontend/files/fs/* application/webserver/frontend/files
      #       env GOOS=windows GOARCH=amd64 go build -o gatesentry-windows.exe
      #       chmod +x gatesentry-windows.exe
      #       git config user.name "GitHub Action"
      #       git config user.email "fifthsegment@github.com"
      #       TAG=v$(date -Iseconds | sed 's/[T:\+]/-/g')
      #       echo "$TAG"
      #       echo "tag=$TAG" >> $GITHUB_OUTPUT
      - name: Setup Inno Setup
        run: |
          docker run --rm -i -v $PWD:/work amake/innosetup scripts/installer.iss

      #   - name: Create Windows Installer
      #     run: |
      #       wine "C:\\Program Files (x86)\\Inno Setup 6\\ISCC.exe" scripts/installer.iss
      - name: Check installer
        run: |
          ls -lh GatesentrySetup.exe
    #   - name: Create Tag
    #     uses: cardinalby/git-tag-action@master
    #     env:
    #       TAG: ${{ steps.build.outputs.tag }}
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   - name: Create Release
    #     uses: softprops/action-gh-release@v1
    #     with:
    #       tag_name: ${{ steps.build.outputs.tag }}
    #       files: |
    #         gatesentry-windows.exe
    #         GatesentrySetup.exe  # assuming the installer file is named "GatesentrySetup.exe"
